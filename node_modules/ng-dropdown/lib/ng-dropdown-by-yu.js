// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  angular.module("ngDropdownByYu", []).directive("ngDropdown", [
    '$timeout', function($timeout) {
      return {
        restrict: "AE",
        transclude: true,
        scope: {
          dropVals: '=?',
          dropObj: '=?',
          chosenVal: '=',
          chosenKey: '=?',
          defaultKey: '=?',
          isUnique: '=?'
        },
        replace: true,
        template: "<div class='ng-dropdown-container' outside-click='hideDrop()'>\n	<div>\n		<input type='button' class='ng-dropdown-btn' value='{{chosenVal}}' ng-click='switchDrop($event)'>\n		<i ng-click='switchDrop($event)' ng-class='{\"fa fa-caret-down\":!dropShow,\"fa fa-caret-up\":dropShow}'></i>\n	</div>\n	\n	<ul ng-if='dropShow && arrdropdown' class='dropdown-list'>\n		<ng-transclude></ng-transclude>\n		<li ng-repeat='val in vals track by $index'>\n			<a href='' ng-bind='val' ng-click='chooseThisVal($index)' class='drop-choose'></a>\n		</li>\n	</ul>\n	<ul ng-if='dropShow && objdropdown' class='dropdown-list'>\n		<ng-transclude></ng-transclude>\n		<li ng-repeat='val in dropdownKeys track by $index'>\n			<a href='' ng-bind='dropObj[val]' ng-click='chooseThisVal(val)' class='drop-choose'></a>\n		</li>\n	</ul>\n</div>",
        link: function(scope, ele, attr) {
          if ((!scope.dropObj && !scope.dropVals) || (scope.dropObj && scope.dropVals)) {
            throw new Error('vals error');
          }
          if (scope.dropObj) {
            scope.$watch('dropObj', function() {
              var key, ref, results, val;
              scope.objdropdown = true;
              scope.dropdownVals = [];
              scope.dropdownKeys = [];
              scope.chosenVal = scope.dropObj[scope.defaultKey || 0];
              ref = scope.dropObj;
              results = [];
              for (key in ref) {
                val = ref[key];
                scope.dropdownVals.push(val);
                results.push(scope.dropdownKeys.push(key));
              }
              return results;
            });
          } else {
            scope.$watch('dropVals', function() {
              scope.vals = scope.dropVals;
              scope.arrdropdown = true;
              return scope.chosenVal = scope.dropVals[scope.defaultKey || 0];
            });
            scope.$watch('defaultKey', function() {
              scope.chosenVal = scope.vals[scope.defaultKey || 0];
              return scope.chosenKey = scope.defaultKey || 0;
            });
          }
          scope.$on("switch drop", function(msg) {
            return scope.dropShow = !scope.dropShow;
          });
          scope.switchDrop = function(e) {
            if (!scope.dropShow) {
              return $timeout(function() {
                return scope.$emit('switch drop');
              });
            }
          };
          scope.chooseThisVal = function(index) {
            scope.chosenKey = index;
            scope.chosenVal = (scope.dropVals || scope.dropObj)[index];
            return scope.$emit('switch drop');
          };
          return scope.hideDrop = function() {
            return scope.dropShow = false;
          };
        }
      };
    }
  ]).directive('outsideClick', [
    '$rootScope', function($rootScope) {
      return {
        restrict: "A",
        link: function(scope, ele, attr) {
          var scopeExpression;
          scopeExpression = attr.outsideClick;
          return $rootScope.$on('close ng dropdown', function(okok, msg) {
            if (scopeExpression) {
              return scope.$apply(scopeExpression);
            }
          });
        }
      };
    }
  ]).run([
    '$document', '$rootScope', function($document, $rootScope) {
      return $document.on("click", function() {
        return $rootScope.$emit('close ng dropdown');
      });
    }
  ]);

}).call(this);
